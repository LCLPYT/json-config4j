plugins {
    id 'java'
    id 'maven-publish'
    id 'gradle-build-utils' version '1.2.0'
}

Properties props = loadProperties.call('publish.properties') as Properties

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = 'work.lclpnet'
version = gitVersion.call()

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.json:json:20220924'
    implementation 'org.slf4j:slf4j-api:2.0.7'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archivesBaseName

            from components.java

            pom {
                name = 'Minigame Lobby'
                description = 'A kibu plugin for managing minigame lobbies in FabricMC.'
            }
        }
    }

    repositories {
        maven {
            def env = System.getenv()
            if (Arrays.stream("DEPLOY_URL", "DEPLOY_USER", "DEPLOY_PASSWORD").allMatch(env.&containsKey)) {
                credentials {
                    username env.get("DEPLOY_USER")
                    password env.get("DEPLOY_PASSWORD")
                }
                url env.get("DEPLOY_URL")
            }
            else if (Arrays.stream("mavenHost", "mavenUser", "mavenPassword").allMatch(props.&containsKey)) {
                credentials {
                    username props.getProperty('mavenUser')
                    password props.getProperty('mavenPassword')
                }
                url props.getProperty('mavenHost')
            } else {
                url "file:///${project.projectDir}/repo"
            }
        }
    }
}